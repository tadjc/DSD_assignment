$date
	Fri Dec 22 19:07:46 2023
$end
$version
	Icarus Verilog
$end
$timescale
	1ns
$end
$scope module test1_tb $end
$var wire 1 ! sel4 $end
$var wire 1 " sel3 $end
$var wire 1 # sel2 $end
$var wire 1 $ sel1 $end
$var wire 1 % mux2 $end
$var wire 1 & mux1 $end
$var wire 1 ' hsel_3 $end
$var wire 1 ( hsel_2 $end
$var wire 1 ) hsel_1 $end
$var wire 1 * done $end
$var reg 1 + clk $end
$var reg 16 , data_in1 [15:0] $end
$var reg 16 - data_in2 [15:0] $end
$var reg 32 . data_in3 [31:0] $end
$var reg 32 / data_in4 [31:0] $end
$var reg 1 0 start $end
$scope module cpt1 $end
$var wire 1 + clk $end
$var wire 1 0 start $end
$var parameter 3 1 s0 $end
$var parameter 3 2 s1 $end
$var parameter 3 3 s2 $end
$var parameter 3 4 s3 $end
$var parameter 3 5 s4 $end
$var parameter 3 6 s5 $end
$var reg 1 * done $end
$var reg 1 & mux1 $end
$var reg 1 % mux2 $end
$var reg 1 $ sel1 $end
$var reg 1 # sel2 $end
$var reg 1 " sel3 $end
$var reg 1 ! sel4 $end
$var reg 3 7 state [2:0] $end
$upscope $end
$scope module dpt1 $end
$var wire 1 + clk $end
$var wire 16 8 data_in1 [15:0] $end
$var wire 16 9 data_in2 [15:0] $end
$var wire 32 : data_in3 [31:0] $end
$var wire 32 ; data_in4 [31:0] $end
$var wire 1 & mux1 $end
$var wire 1 % mux2 $end
$var wire 1 $ sel1 $end
$var wire 1 # sel2 $end
$var wire 1 " sel3 $end
$var wire 1 ! sel4 $end
$var wire 16 < z [15:0] $end
$var wire 16 = y [15:0] $end
$var wire 16 > x [15:0] $end
$var wire 32 ? r [31:0] $end
$var wire 32 @ q [31:0] $end
$var wire 32 A p [31:0] $end
$var wire 1 ' hsel_3 $end
$var wire 1 ( hsel_2 $end
$var wire 1 ) hsel_1 $end
$scope module HADDR1 $end
$var wire 1 + clk $end
$var wire 16 B din [15:0] $end
$var wire 1 $ ld $end
$var reg 16 C dout [15:0] $end
$upscope $end
$scope module HADDR2 $end
$var wire 1 + clk $end
$var wire 16 D din [15:0] $end
$var wire 1 # ld $end
$var reg 16 E dout [15:0] $end
$upscope $end
$scope module HWDATA1 $end
$var wire 1 + clk $end
$var wire 32 F din [31:0] $end
$var wire 1 " ld $end
$var reg 32 G dout [31:0] $end
$upscope $end
$scope module HWDATA2 $end
$var wire 1 + clk $end
$var wire 32 H din [31:0] $end
$var wire 1 ! ld $end
$var reg 32 I dout [31:0] $end
$upscope $end
$scope module addressmux $end
$var wire 16 J in0 [15:0] $end
$var wire 16 K in1 [15:0] $end
$var wire 1 & sel $end
$var wire 16 L out [15:0] $end
$upscope $end
$scope module datamux $end
$var wire 32 M in0 [31:0] $end
$var wire 32 N in1 [31:0] $end
$var wire 1 % sel $end
$var wire 32 O out [31:0] $end
$upscope $end
$scope module test1_dec $end
$var wire 16 P haddr [15:0] $end
$var reg 1 ) hsel_0 $end
$var reg 1 ( hsel_1 $end
$var reg 1 ' hsel_2 $end
$upscope $end
$upscope $end
$upscope $end
$enddefinitions $end
$comment Show the parameter values. $end
$dumpall
b101 6
b100 5
b11 4
b10 3
b1 2
b0 1
$end
#0
$dumpvars
bx P
bx O
bx N
bx M
bx L
bx K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
bx @
bx ?
bx >
bx =
bx <
bx ;
bx :
bx 9
bx 8
bx 7
x0
bx /
bx .
bx -
bx ,
0+
x*
x)
x(
x'
x&
x%
x$
x#
x"
x!
$end
#1
b1000 ,
b1000 8
b1000 B
#2
b100000000001000 -
b100000000001000 9
b100000000001000 D
#3
b1010 .
b1010 :
b1010 F
10
#4
b10100 /
b10100 ;
b10100 H
#5
b0 7
1+
#6
0*
0%
0!
0"
0&
0#
0$
#10
0+
#15
b1 7
1+
#16
1$
#20
0+
#25
0'
0(
1)
b1000 <
b1000 L
b1000 P
b1000 >
b1000 C
b1000 J
b10 7
1+
#26
0)
bx <
bx L
bx P
1&
1#
0$
#30
0+
#35
1(
b100000000001000 <
b100000000001000 L
b100000000001000 P
b11 7
b100000000001000 =
b100000000001000 E
b100000000001000 K
1+
#36
0(
1)
b1000 <
b1000 L
b1000 P
1"
0&
0#
#40
0+
#45
b1010 ?
b1010 O
b1010 A
b1010 G
b1010 M
b100 7
1+
#46
bx ?
bx O
1%
1!
0"
#50
0+
#55
b10100 ?
b10100 O
b101 7
b10100 @
b10100 I
b10100 N
1+
#56
b1010 ?
b1010 O
1*
0%
0!
#60
0+
#65
b0 7
1+
#66
0*
#70
0+
#75
b1 7
1+
#76
1$
#80
0+
#85
b10 7
1+
#86
1(
0)
b100000000001000 <
b100000000001000 L
b100000000001000 P
1&
1#
0$
#90
0+
#95
b11 7
1+
#96
0(
1)
b1000 <
b1000 L
b1000 P
1"
0&
0#
#100
0+
#105
b100 7
1+
#106
b10100 ?
b10100 O
1%
1!
0"
#110
0+
#115
b101 7
1+
#116
b1010 ?
b1010 O
1*
0%
0!
#120
0+
#125
b0 7
1+
#126
0*
#130
0+
#135
b1 7
1+
#136
1$
#140
0+
#145
b10 7
1+
#146
1(
0)
b100000000001000 <
b100000000001000 L
b100000000001000 P
1&
1#
0$
#150
0+
#155
b11 7
1+
#156
0(
1)
b1000 <
b1000 L
b1000 P
1"
0&
0#
#160
0+
#165
b100 7
1+
#166
b10100 ?
b10100 O
1%
1!
0"
#170
0+
#175
b101 7
1+
#176
b1010 ?
b1010 O
1*
0%
0!
#180
0+
#185
b0 7
1+
#186
0*
#190
0+
#195
b1 7
1+
#196
1$
#200
0+
#205
b10 7
1+
#206
1(
0)
b100000000001000 <
b100000000001000 L
b100000000001000 P
1&
1#
0$
#210
0+
#215
b11 7
1+
#216
0(
1)
b1000 <
b1000 L
b1000 P
1"
0&
0#
#220
0+
#225
b100 7
1+
#226
b10100 ?
b10100 O
1%
1!
0"
#230
0+
#235
b101 7
1+
#236
b1010 ?
b1010 O
1*
0%
0!
#240
0+
#245
b0 7
1+
#246
0*
#250
0+
#255
b1 7
1+
#256
1$
#260
0+
#265
b10 7
1+
#266
1(
0)
b100000000001000 <
b100000000001000 L
b100000000001000 P
1&
1#
0$
#270
0+
#275
b11 7
1+
#276
0(
1)
b1000 <
b1000 L
b1000 P
1"
0&
0#
#280
0+
#285
b100 7
1+
#286
b10100 ?
b10100 O
1%
1!
0"
#290
0+
#295
b101 7
1+
#296
b1010 ?
b1010 O
1*
0%
0!
#300
0+
#305
b0 7
1+
#306
0*
#310
0+
#315
b1 7
1+
#316
1$
#320
0+
#325
b10 7
1+
#326
1(
0)
b100000000001000 <
b100000000001000 L
b100000000001000 P
1&
1#
0$
#330
0+
#335
b11 7
1+
#336
0(
1)
b1000 <
b1000 L
b1000 P
1"
0&
0#
#340
0+
#345
b100 7
1+
#346
b10100 ?
b10100 O
1%
1!
0"
#350
0+
#355
b101 7
1+
#356
b1010 ?
b1010 O
1*
0%
0!
#360
0+
#365
b0 7
1+
#366
0*
#370
0+
#375
b1 7
1+
#376
1$
#380
0+
#385
b10 7
1+
#386
1(
0)
b100000000001000 <
b100000000001000 L
b100000000001000 P
1&
1#
0$
#390
0+
#395
b11 7
1+
#396
0(
1)
b1000 <
b1000 L
b1000 P
1"
0&
0#
#400
0+
#405
b100 7
1+
#406
b10100 ?
b10100 O
1%
1!
0"
#410
0+
#415
b101 7
1+
#416
b1010 ?
b1010 O
1*
0%
0!
#420
0+
#425
b0 7
1+
#426
0*
#430
0+
#435
b1 7
1+
#436
1$
#440
0+
#445
b10 7
1+
#446
1(
0)
b100000000001000 <
b100000000001000 L
b100000000001000 P
1&
1#
0$
#450
0+
#455
b11 7
1+
#456
0(
1)
b1000 <
b1000 L
b1000 P
1"
0&
0#
#460
0+
#465
b100 7
1+
#466
b10100 ?
b10100 O
1%
1!
0"
#470
0+
#475
b101 7
1+
#476
b1010 ?
b1010 O
1*
0%
0!
#480
0+
#485
b0 7
1+
#486
0*
#490
0+
#495
b1 7
1+
#496
1$
#500
0+
#503
